name: AI Agent CI/CD

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.13.3'

      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          # Remove duplicate installations - requirements.txt already has everything

      - name: Set environment variables for testing
        run: |
          echo "TRANSFORMERS_CACHE=/tmp/transformers_cache" >> $GITHUB_ENV
          echo "HF_HOME=/tmp/huggingface" >> $GITHUB_ENV
          echo "SENTENCE_TRANSFORMERS_HOME=/tmp/sentence_transformers" >> $GITHUB_ENV
          mkdir -p /tmp/transformers_cache /tmp/huggingface /tmp/sentence_transformers

      - name: Download sentence-transformers model
        run: |
          export TRANSFORMERS_CACHE=/tmp/transformers_cache
          export HF_HOME=/tmp/huggingface
          export SENTENCE_TRANSFORMERS_HOME=/tmp/sentence_transformers
          python -c "
          from sentence_transformers import SentenceTransformer
          print('Downloading sentence-transformers model...')
          model = SentenceTransformer('all-MiniLM-L6-v2')
          print('✅ Model downloaded successfully')
          "

      - name: Lint code (flake8)
        run: |
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics || true

      - name: Check Python syntax
        run: |
          python -m py_compile ai_agent_working_fixed.py

      - name: Test imports
        run: |
          python -c "
          import sys
          import os
          os.environ.setdefault('TRANSFORMERS_CACHE', '/tmp/transformers_cache')
          os.environ.setdefault('HF_HOME', '/tmp/huggingface')
          try:
              from ai_agent_working_fixed import app
              print('✅ Flask app imports successfully')
          except Exception as e:
              print(f'❌ Import error: {e}')
              import traceback
              traceback.print_exc()
              sys.exit(1)
          "

      - name: Run tests (if available)
        run: |
          if [ -d "tests" ]; then
            pytest
          else
            echo "No tests directory found, skipping tests"
          fi

  deploy-dev:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    permissions:
      contents: read
      id-token: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Authenticate with Google Cloud
        uses: google-github-actions/auth@v2  # Updated to v2
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIALS }}
          project_id: nikitha-2025-1

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Deploy to Cloud Run (dev)
        run: |
          gcloud run deploy ai-agent-dev \
            --source=. \
            --region=us-central1 \
            --platform=managed \
            --allow-unauthenticated \
            --set-env-vars ENV=dev \
            --project=nikitha-2025-1

  approval:
    needs: deploy-dev
    runs-on: ubuntu-latest
    environment:
      name: production

    steps:
      - name: Await manual approval
        run: echo "Waiting for production deployment approval..."

  deploy-prod:
    needs: approval
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Authenticate with Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIALS }}
          project_id: nikitha-2025-1

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Deploy to Cloud Run (prod)
        run: |
          gcloud run deploy ai-agent-prod \
            --source=. \
            --region=us-central1 \
            --platform=managed \
            --allow-unauthenticated \
            --set-env-vars ENV=prod \
            --project=nikitha-2025-1